On monads
-------
1. create a Generator[T] monad with map

2. create a Generator[Int] with random int generation. This will be our base Generator

3. create a Generator[Bool] with 2)

4. create a Generator[(Int, Int)] with 2)

5. generate (T, U) pair with a Generator[T], and Generator[U]

6. create a Generator[List[Int]], use Generator[Bool] to decide if use empty list or not

7. create a Generator[Tree[Int]], do this only after you finish 6)


On future, promise, and async/await
----------

1. implement Future.fallbackTo with recoverWith

2. implement retry with Future and fallbackTo

3. async/await is implicit future, implement retry with async/await

4. implment Future.filter with async/await

5. implment Future.flatmap with async/await

6. implment sequence. convert a List[Future[T]] to Future[List[T]]
